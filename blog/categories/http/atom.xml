<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: http | sqldump]]></title>
  <link href="http://blog.abhinav.ca/blog/categories/http/atom.xml" rel="self"/>
  <link href="http://blog.abhinav.ca/"/>
  <updated>2015-02-20T06:39:34-05:00</updated>
  <id>http://blog.abhinav.ca/</id>
  <author>
    <name><![CDATA[Abhinav Ajgaonkar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[File uploads in Scala via Apache HttpComponents]]></title>
    <link href="http://blog.abhinav.ca/blog/2014/02/08/file-uploads-via-apache-httpcomponents/"/>
    <updated>2014-02-08T20:10:05-05:00</updated>
    <id>http://blog.abhinav.ca/blog/2014/02/08/file-uploads-via-apache-httpcomponents</id>
    <content type="html"><![CDATA[<p>In order to upload photos to Facebook from the server-side, the Graph API requires you to make a POST request with the image attached as multipart/form-data. Since I couldn&rsquo;t find any native Scala libraries that make this task easy or intuitive, I went with the battle-tested Apache HttpComponents library.</p>

<p>Since the app was going to upload photos to Facebook in an on-demand fashion, I went with an HTTPClient that could be reused and was able handle multiple requests concurrently.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">httpClient</span> <span class="k">=</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">connManager</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">PoolingHttpClientConnectionManager</span><span class="o">()</span>
</span><span class='line'>  <span class="nc">HttpClients</span><span class="o">.</span><span class="n">custom</span><span class="o">().</span><span class="n">setConnectionManager</span><span class="o">(</span><span class="n">connManager</span><span class="o">).</span><span class="n">build</span><span class="o">()</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>The next step was to create an entity that contains all the POST data:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">accessToken</span> <span class="k">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="nc">MY_FACEBOOK_ACCESS_TOKEN</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;</span>
</span><span class='line'><span class="k">val</span> <span class="n">file</span> <span class="k">=</span> <span class="o">&amp;</span><span class="n">ldquo</span><span class="o">;/</span><span class="n">absolute</span><span class="o">/</span><span class="n">path</span><span class="o">/</span><span class="n">to</span><span class="o">/</span><span class="n">file</span><span class="o">.</span><span class="n">jpg</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;</span>
</span><span class='line'><span class="k">val</span> <span class="n">reqEntity</span> <span class="k">=</span> <span class="nc">MultipartEntityBuilder</span><span class="o">.</span><span class="n">create</span><span class="o">()</span>
</span><span class='line'><span class="n">reqEntity</span><span class="o">.</span><span class="n">addPart</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">source</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;,</span> <span class="k">new</span> <span class="nc">FileBody</span><span class="o">(</span><span class="n">file</span><span class="o">))</span>
</span><span class='line'><span class="n">reqEntity</span><span class="o">.</span><span class="n">addPart</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;</span><span class="n">access_token</span><span class="o">&amp;</span><span class="n">rdquo</span><span class="o">;,</span> <span class="k">new</span> <span class="nc">StringBody</span><span class="o">(</span><span class="n">accessToken</span><span class="o">,</span> <span class="nc">ContentType</span><span class="o">.</span><span class="nc">TEXT_PLAIN</span><span class="o">))</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>In this case <code>source</code> is the name of the form field whose value is the image file. The next step is to create a POST request and execute it using our <code>httpClient</code>.</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">uri</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">URI</span><span class="o">(&amp;</span><span class="n">ldquo</span><span class="o">;&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;https://graph.facebook.com/me/photos&quot;</span><span class="o">&gt;</span><span class="n">https</span><span class="o">://</span><span class="n">graph</span><span class="o">.</span><span class="n">facebook</span><span class="o">.</span><span class="n">com</span><span class="o">/</span><span class="n">me</span><span class="o">/</span><span class="n">photos</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;&amp;</span><span class="n">rdquo</span><span class="o">;)&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">val</span> <span class="n">httpPost</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">HttpPost</span><span class="o">(</span><span class="n">uri</span><span class="o">)</span>
</span><span class='line'><span class="n">httpPost</span><span class="o">.</span><span class="n">setEntity</span><span class="o">(</span><span class="n">reqEntity</span><span class="o">.</span><span class="n">build</span><span class="o">())</span>
</span><span class='line'><span class="k">val</span> <span class="n">response</span> <span class="k">=</span> <span class="n">httpClient</span><span class="o">.</span><span class="n">execute</span><span class="o">(</span><span class="n">httpPost</span><span class="o">,</span> <span class="nc">HttpClientContext</span><span class="o">.</span><span class="n">create</span><span class="o">())</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Use <code>EntityUtils</code> to read the response text:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">val</span> <span class="n">entity</span> <span class="k">=</span> <span class="n">response</span><span class="o">.</span><span class="n">getEntity</span>
</span><span class='line'><span class="k">val</span> <span class="n">result</span> <span class="k">=</span> <span class="nc">EntityUtils</span><span class="o">.</span><span class="n">toString</span><span class="o">(</span><span class="n">entity</span><span class="o">)</span>
</span><span class='line'><span class="k">if</span><span class="o">(</span><span class="n">response</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">response</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>Remember to close the response after you&rsquo;re done reading from it. Here&rsquo;s a full example including all the imports:</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">import</span> <span class="nn">java.io.File</span>
</span><span class='line'><span class="k">import</span> <span class="nn">java.net.URI</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.client.methods.</span><span class="o">{</span><span class="nc">HttpPost</span><span class="o">,</span> <span class="nc">CloseableHttpResponse</span><span class="o">}</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.client.protocol.HttpClientContext</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.entity.mime.MultipartEntityBuilder</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.entity.mime.content.</span><span class="o">{</span><span class="nc">StringBody</span><span class="o">,</span> <span class="nc">FileBody</span><span class="o">}</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.entity.ContentType</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.util.EntityUtils</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.impl.conn.PoolingHttpClientConnectionManager</span>
</span><span class='line'><span class="k">import</span> <span class="nn">org.apache.http.impl.client.HttpClients</span>
</span><span class='line'><span class="k">import</span> <span class="nn">scala.util.Try</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">object</span> <span class="nc">Uploader</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">lazy</span> <span class="k">val</span> <span class="n">httpClient</span> <span class="k">=</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">val</span> <span class="n">connManager</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">PoolingHttpClientConnectionManager</span><span class="o">()</span>
</span><span class='line'><span class="nc">HttpClients</span><span class="o">.</span><span class="n">custom</span><span class="o">().</span><span class="n">setConnectionManager</span><span class="o">(</span><span class="n">connManager</span><span class="o">).</span><span class="n">build</span><span class="o">()</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="o">}&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">def</span> <span class="n">uploadToFacebook</span><span class="o">(</span><span class="n">file</span><span class="k">:</span> <span class="kt">File</span><span class="o">,</span> <span class="n">accessToken</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span><span class="k">:</span> <span class="kt">Try</span><span class="o">[</span><span class="kt">String</span><span class="o">]</span> <span class="k">=</span> <span class="o">{&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="k">val</span> <span class="n">uri</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">URI</span><span class="o">(</span><span class="s">&quot;https://graph.facebook.com/me/photos&quot;</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'><span class="nc">Try</span><span class="o">({</span>
</span><span class='line'>  <span class="c1">// Create the entity</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">reqEntity</span> <span class="k">=</span> <span class="nc">MultipartEntityBuilder</span><span class="o">.</span><span class="n">create</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Attach the file</span>
</span><span class='line'>  <span class="n">reqEntity</span><span class="o">.</span><span class="n">addPart</span><span class="o">(</span><span class="s">&quot;source&quot;</span><span class="o">,</span> <span class="k">new</span> <span class="nc">FileBody</span><span class="o">(</span><span class="n">file</span><span class="o">))</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Attach the access token as plain text</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">tokenBody</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">StringBody</span><span class="o">(</span><span class="n">accessToken</span><span class="o">,</span> <span class="nc">ContentType</span><span class="o">.</span><span class="nc">TEXT_PLAIN</span><span class="o">)</span>
</span><span class='line'>  <span class="n">reqEntity</span><span class="o">.</span><span class="n">addPart</span><span class="o">(</span><span class="s">&quot;access_token&quot;</span><span class="o">,</span> <span class="n">tokenBody</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Create POST request</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">httpPost</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">HttpPost</span><span class="o">(</span><span class="n">uri</span><span class="o">)</span>
</span><span class='line'>  <span class="n">httpPost</span><span class="o">.</span><span class="n">setEntity</span><span class="o">(</span><span class="n">reqEntity</span><span class="o">.</span><span class="n">build</span><span class="o">())</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Execute the request in a new HttpContext</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">ctx</span> <span class="k">=</span> <span class="nc">HttpClientContext</span><span class="o">.</span><span class="n">create</span><span class="o">()</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">response</span><span class="k">:</span> <span class="kt">CloseableHttpResponse</span> <span class="o">=</span> <span class="n">httpClient</span><span class="o">.</span><span class="n">execute</span><span class="o">(</span><span class="n">httpPost</span><span class="o">,</span> <span class="n">ctx</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Read the response</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">entity</span> <span class="k">=</span> <span class="n">response</span><span class="o">.</span><span class="n">getEntity</span>
</span><span class='line'>  <span class="k">val</span> <span class="n">result</span> <span class="k">=</span> <span class="nc">EntityUtils</span><span class="o">.</span><span class="n">toString</span><span class="o">(</span><span class="n">entity</span><span class="o">)</span>
</span><span class='line'>
</span><span class='line'>  <span class="c1">// Close the response</span>
</span><span class='line'>  <span class="k">if</span><span class="o">(</span><span class="n">response</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="n">response</span><span class="o">.</span><span class="n">close</span><span class="o">()</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">result</span>
</span><span class='line'><span class="o">})</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
