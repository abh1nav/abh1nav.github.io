<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: python, | sqldump]]></title>
  <link href="http://blog.abhinav.ca/blog/categories/python/atom.xml" rel="self"/>
  <link href="http://blog.abhinav.ca/"/>
  <updated>2014-07-31T15:32:31-04:00</updated>
  <id>http://blog.abhinav.ca/</id>
  <author>
    <name><![CDATA[Abhinav Ajgaonkar]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kickstart a Couchbase cluster with Docker]]></title>
    <link href="http://blog.abhinav.ca/blog/2014/07/31/kickstart-a-couchbase-cluster-with-docker/"/>
    <updated>2014-07-31T11:01:15-04:00</updated>
    <id>http://blog.abhinav.ca/blog/2014/07/31/kickstart-a-couchbase-cluster-with-docker</id>
    <content type="html"><![CDATA[<p>A few days ago, I was officially introduced to <a href="http://www.couchbase.com/">Couchbase</a> at a <a href="http://www.meetup.com/TorontoHUG/events/191410172/">Toronto Hadoop User Group meetup</a>. I say &ldquo;officially&rdquo; because I&rsquo;ve known about some Couchbase use-cases / pros and cons on a high level since v1.8, but never really had the time to look at it in detail.</p>

<p>As the presentation progressed, it got me interested in actually tinkering around with a Couchbase cluster (kudos to <a href="https://twitter.com/NoSQLDon">Don Pinto</a>). My first instinct was to head over to the <a href="https://registry.hub.docker.com">Docker Registry</a> and do a quick search for <code>couchbase</code>. Using the <code>dustin/couchbase</code> image, I was able to get a 5-node cluster running in under 5 minutes.</p>

<h3>Run 5 containers</h3>

<p><code>bash
docker run -d -p 11210:11210 -p 11211:11211 -p 8091:8091 -p 8092:8092 --name cb1 dustin/couchbase
docker run -d --name cb2 dustin/couchbase
docker run -d --name cb3 dustin/couchbase
docker run -d --name cb4 dustin/couchbase
docker run -d --name cb5 dustin/couchbase
</code></p>

<h3>Find Container IPs</h3>

<p>Once the containers were up, I used <code>docker inspect</code> to find their internal IPs (usually in the <code>172.17.x.x</code> range). For example, <code>docker inspect cb1</code> returns</p>

<p>```json
[{</p>

<pre><code>"Args": [
    "run"
],
"Config": {
    "AttachStderr": false,
...
"NetworkSettings": {
    "Bridge": "docker0",
    "Gateway": "172.17.42.1",
    "IPAddress": "172.17.0.27",
...
</code></pre>

<p>```</p>

<p>Update: <a href="https://twitter.com/upthecyberpunks">Nathan LeClaire</a> from <a href="http://docker.io">Docker</a> was kind enough to write up a <a href="https://gist.github.com/nathanleclaire/c7c402f7a9889ca77b98">quick script</a> that combines these two steps:</p>

<p>```bash
docker run -d -p 11210:11210 -p 11211:11211 -p 8091:8091 -p 8092:8092 &mdash;name cb1 dustin/couchbase</p>

<p>for name in cb{2..5}; do</p>

<pre><code>docker run -d --name $name dustin/couchbase
</code></pre>

<p>done</p>

<p>for name in cb{1..5}; do</p>

<pre><code>docker inspect -f '' $name
</code></pre>

<p>done
```</p>

<h3>Setup Cluster using WebUI</h3>

<p>If <code>cb1</code> is at <code>172.17.0.27</code>, then the Couchbase management interface comes up at <code>http://172.17.0.27:8091</code> and the default credentials are:</p>

<p><code>
Username: Administrator
Password: password
</code></p>

<p>Once you&rsquo;re in, setting up a cluster is as easy as clicking &ldquo;Add Server&rdquo; and giving it the IPs of the other containers. As soon as you add a new server to the cluster, Couchbase will prompt you to run a &ldquo;Cluster Rebalance&rdquo; operation &ndash; hold off until you&rsquo;ve added all 5 nodes and then run the rebalance.</p>

<p><img src="/images/2014-07-31-Couchbase-WebUI-Rebalance.png"></p>

<h3>Push some data into the cluster</h3>

<p>Once the cluster was up, I wanted to get a feel for how the WebUI works so I wrote this script to grab some data from our existing cluster of JSON-store-that-I-am-too-ashamed-to-mention and added it to Couchbase:</p>

<p>```python</p>

<h1>!/usr/bin/env python</h1>

<h1>encoding: utf-8</h1>

<p>from pymongo import MongoClient
from couchbase import Couchbase</p>

<p>src = MongoClient([&lsquo;m1&rsquo;, &lsquo;m2&rsquo;, &lsquo;m3&rsquo;])[&lsquo;twitter_raw&rsquo;][&lsquo;starbucks&rsquo;]
tar = Couchbase.connect(bucket=&lsquo;twitter_starbucks&rsquo;,  host=&lsquo;localhost&rsquo;)</p>

<p>for doc in src.find():</p>

<pre><code>key = str(doc['_id'])
del doc['_id']
result = tar.set(key, doc)
</code></pre>

<p>```</p>

<p>The Couchbase <a href="http://www.couchbase.com/communities/python">python client</a> depends on <a href="http://www.couchbase.com/communities/c-client-library">libcouchbase</a>. Once those two were installed, and the <code>twitter_starbucks</code> bucket had been created in Couchbase, I was able to load ~100k JSON documents in a matter of minutes.</p>
]]></content>
  </entry>
  
</feed>
